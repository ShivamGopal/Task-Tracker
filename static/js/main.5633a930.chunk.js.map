{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onAdd","showForm","className","onClick","Header","style","color","Task","task","onDelete","toggleReminder","title","reminder","onDoubleClick","_id","font-size","text","day","Tasks","tasks","map","AddTask","submit","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","count","setCount","setTasks","setShowForm","useEffect","axios","get","then","result","data","ans","length","catch","err","console","log","deleteTask","a","filter","delete","put","newTask","post","border","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5633a930.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = ({onAdd,showForm}) => {\r\n  return (\r\n      <button className={`button ${showForm?'button-remove':''}`} onClick={onAdd}>{showForm?'Close':'Add'}</button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst Header = ({onAdd, showForm}) => {\r\n  return (\r\n    <header className='header'>\r\n      <h1 style={{ color: '#660022'}}> Task Tracker</h1>\r\n      <Button onAdd={onAdd} showForm={showForm} />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\n\r\nconst Task = ({task,onDelete,toggleReminder}) => {\r\n  return (\r\n    <div title='Double click to add or remove reminder' className={`task ${task.reminder?'reminder':''}`} onDoubleClick={()=>toggleReminder(task._id)}>\r\n      <button title='Delete Task' className=\"cross\" onClick={()=> onDelete(task._id)}><FaTrashAlt font-size='18px'/></button>\r\n      <h3>{task.text}</h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({tasks,onDelete,toggleReminder}) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task)=>(\r\n        <Task key={task._id} task={task} onDelete={onDelete} toggleReminder={toggleReminder}/>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import React ,{ useState }from 'react'\r\n\r\nconst AddTask = ({submit}) => {\r\n  const [text,setText]=useState('');\r\n  const [day,setDay]=useState('');\r\n  const [reminder,setReminder]=useState(false);\r\n  const submitTask=(e)=>{\r\n    e.preventDefault();\r\n    if(!text){\r\n      alert('Please add a task');\r\n      return;\r\n    }\r\n    submit({text,day,reminder});\r\n\r\n    setText('');\r\n    setDay('');\r\n    setReminder(false);\r\n  }\r\n  return (\r\n   <form onSubmit={submitTask}>\r\n     <div className='form'>\r\n      <label>Task</label><br />\r\n      <input type='text' placeholder=\"Add Task\" value={text} onChange={(e)=>setText(e.target.value)}></input>\r\n     </div>\r\n     <div className='form'>\r\n      <label>Add Day and Time</label><br />\r\n      <input type='text' placeholder=\"25th Feb at 2 P.M.\" value={day} onChange={(e)=>setDay(e.target.value)}></input>\r\n     </div>\r\n     <div className='form checkbox'>\r\n      <label>Set Reminder</label>\r\n      <input type='checkbox' checked={reminder} value={reminder}  onChange={(e)=> setReminder(e.currentTarget.checked)} />\r\n     </div>\r\n     <div className=\"form btn-submit\">\r\n      <input type='submit' value='Save Task'></input>\r\n     </div>\r\n   </form> \r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import React, {useState, useEffect}  from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header'\nimport Tasks from './Components/Tasks'\nimport AddTask from './Components/AddTask'\n\nfunction App() {\n  //count is used to set id.  \n  let [count,setCount]=useState();\n  const [tasks,setTasks]=useState([]);\n  const [showForm, setShowForm]=useState(false);\n\n  useEffect(()=>{\n    axios.get('https://task-tracker-mern.herokuapp.com/api/task').then(result=>result.data).then((ans)=>{\n      if(ans.length===0){\n        setCount(-1);\n      }\n      else{\n        setCount((ans[ans.length-1]._id));\n      }\n      setTasks(ans);\n    }).catch((err)=>console.log(err));\n  },[]);\n\n//Delete Task\n const deleteTask=async (_id)=>{\n   setTasks(tasks.filter((task)=> task._id!== _id))\n   axios.delete(`https://task-tracker-mern.herokuapp.com/api/task/${_id}`).then().catch(err=>console.log(err));\n  };\n\n //To toggle reminder\n const toggleReminder=async (_id)=>{\n  setTasks(tasks.map((task)=>{\n   if(task._id===_id){ \n    task.reminder=!task.reminder;\n    axios.put(`https://task-tracker-mern.herokuapp.com/api/task/${_id}`,{reminder:task.reminder}).then().catch(err=>console.log(err));\n   }\n  return task; \n  }))\n };\n\n //To Show Form or not\n  const onAdd=()=>{\n   setShowForm(!showForm)\n };\n\n //To add task\n  const addTask=(task)=>{\n    setCount(++count);\n    console.log(count);\n    const _id=count;\n    const newTask={ _id,...task };\n    setTasks([...tasks,newTask])\n    axios.post('https://task-tracker-mern.herokuapp.com/api/task',newTask).then().catch(err=>console.log(err));\n  };\n\n  return (\n    <>\n      <Header onAdd={onAdd} showForm={showForm}/>\n      {showForm && <AddTask submit={addTask} />}\n      <hr style={{border:'1px solid black'}}/>\n      {tasks.length>0 ?<Tasks tasks={tasks} onDelete={deleteTask} toggleReminder={toggleReminder} />: <h2 style={{textAlign:'center'}}>No Tasks to show</h2>}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}